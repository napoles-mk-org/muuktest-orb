description: >
  MuukTest Playwright executor with Circle CI on Github pull requests

docker:
  - image: cimg/base:stable
  
parameters:
  t:
    type: string
    description: "Test case id or hastag name"

  p:
    type: enum
    default: tag
    enum: [tag, hashtag]
    description: "Set either tag or hastag regarding t value"

  browser:
    type: enum
    default: chromium
    enum: [chromium, firefox]
    description: "Set either from chrome or firefox to run the scritp on"

  muuk-key:
    type: string
    description: "MuukTest key.pub value"

steps:
  - run:
      name: Pass Inputs to Shell
      command: |
        export MUUKTEST_KEY=<< parameters.muuk-key >>
        export TAG_PROPERTY=<< parameters.p >>
        export TAG_VALUE=<< parameters.t >>
        export MUUKTEST_BROWSER=<< parameters.browser >>
        mkdir -p executor

  - run:
      name: Installing dependencies
      command: |
        cd executor
        apt-get update
        apt-get install -y ca-certificates curl gnupg
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        NODE_MAJOR=20
        echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
        apt-get install nodejs -y
        node -v
        apt-get install gcc g++ make
        apt-get install -y unzip

  - run:
      name: Retrieve MuukTest config files and Test scripts
      command: |
        cd executor
        printf '{ "key": "%s"}' $MUUKTEST_KEY > file.json
        cat file.json
        curl -H  "Content-Type: application/json" -X POST -d @file.json 'https://portal.muuktest.com:8081/generate_token_executer' -o "token.json"
        curl -X POST https://portal.muuktest.com:8081/api/v1/downloadpwfiles -k -d @file.json -H "Content-Type: application/json" -o ./config.zip
        unzip -o config.zip -d .
        TOKEN=$(jq --raw-output .token token.json)
        printf "Authorization: Bearer %s" $TOKEN > header.txt
        MUUK_USERID_TOKEN=$(jq --raw-output .userId token.json)
        printf '{"property": "%s", "value": ["%s"], "platform": "pw", "userId": "%s"}' $TAG_PROPERTY $TAG_VALUE $MUUK_USERID_TOKEN > body.json
        curl -X POST https://portal.muuktest.com:8081/download_byproperty -H @header.txt -d @body.json -H "Content-Type: application/json" -o ./test.zip
        [ -d "./test" ] && rm -r test
        unzip -o test.zip -d ./test
        ls -l

  - run:
      name: Installing PW
      command: |
        cd executor
        npm install -D @playwright/test
        npx playwright install --with-deps $MUUKTEST_BROWSER
        npm install axios
        npm install archiver

  - run:
      name: Execute MuukTest E2E
      command: |
        cd executor
        npx playwright test --workers=3 --project=$MUUKTEST_BROWSER
